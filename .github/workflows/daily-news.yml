name: Daily News Aggregation

on:
  schedule:
    # Run every day at 6:05 AM EST (11:05 AM UTC)
    - cron: '5 11 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  aggregate-news:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create config file
      run: |
        cat > config.json << EOF
        {
          "cypher_api_key": "${{ secrets.CYPHER_API_KEY }}",
          "newsapi_key": "${{ secrets.NEWSAPI_KEY }}",
          "hours_back": 24,
          "story_limit": 150,
          "log_level": "INFO",
          "log_file": "logs/cronkite.log",
          "log_format": "%(asctime)s - %(name)s - %(levelname)s - %(message)s",
          "disable_console": true
        }
        EOF
        
    - name: Create logs directory
      run: mkdir -p logs
      
    - name: Run news aggregator
      run: |
        python cronkite.py > news_report.txt 2>&1
        echo "Exit code: $?" >> news_report.txt
        
    - name: Upload news report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: daily-news-report-${{ github.run_number }}
        path: news_report.txt
        retention-days: 30
        
    - name: Create summary
      run: |
        echo "## Daily News Aggregation Summary" >> $GITHUB_STEP_SUMMARY
        echo "**Run Date:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "**Run Number:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f news_report.txt ]; then
          echo "**Report Generated:** ✅" >> $GITHUB_STEP_SUMMARY
          echo "**Report Size:** $(wc -c < news_report.txt) bytes" >> $GITHUB_STEP_SUMMARY
        else
          echo "**Report Generated:** ❌" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -f logs/cronkite.log ]; then
          echo "**Logs Generated:** ✅ (not stored as artifact)" >> $GITHUB_STEP_SUMMARY
          echo "**Log Size:** $(wc -c < logs/cronkite.log) bytes" >> $GITHUB_STEP_SUMMARY
        else
          echo "**Logs Generated:** ❌" >> $GITHUB_STEP_SUMMARY
        fi 