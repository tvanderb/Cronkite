name: Update README with Latest Report

on:
  workflow_run:
    workflows: ["Daily News Aggregation"]
    types: [completed]

jobs:
  update-readme:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download latest artifact
      uses: actions/download-artifact@v4
      with:
        name: daily-news-report-${{ github.event.workflow_run.run_number }}-${{ github.event.workflow_run.head_sha }}
        path: ./artifacts
        if-no-files-found: warn
        
    - name: Update README with latest report
      run: |
        if [ -f "./artifacts/news_report.txt" ]; then
          echo "‚úÖ Found news report artifact, updating README..."
          
          # Read the report content
          REPORT_CONTENT=$(cat "./artifacts/news_report.txt")
          
          # Create a preview (first 500 characters)
          PREVIEW=$(echo "$REPORT_CONTENT" | head -c 500 | sed 's/$/.../')
          
          # Create the new section content
          cat > new_section.md << 'EOF'
          ## üì∞ Latest Report
          
          **Latest Daily Report:** [View Latest Run](https://github.com/${{ github.repository }}/actions)
          
          **Last Updated:** $(date -u +"%Y-%m-%d %H:%M UTC")
          
          *Generated daily at 6:05 AM EST*
          
          ### üìã Report Preview
          ```
          EOF
          
          echo "$PREVIEW" >> new_section.md
          
          cat >> new_section.md << 'EOF'
          ```
          
          ### üì• Download
          1. Click the badge above ‚Üí Actions tab
          2. Select latest "Daily News Aggregation" run
          3. Download `daily-news-report-${{ github.event.workflow_run.run_number }}-${{ github.event.workflow_run.head_sha }}` artifact
          EOF
          
          # Replace the section in README using awk
          awk '
          /## üì∞ Latest Report/ {
            system("cat new_section.md")
            p=1
            next
          }
          /### üì• Download/ {
            p=0
            next
          }
          !p {
            print
          }
          ' README.md > README_new.md
          
          mv README_new.md README.md
          rm new_section.md
          
          echo "‚úÖ README updated successfully"
        else
          echo "‚ùå No news report artifact found. Skipping README update."
          echo "This might happen if the daily news aggregation failed or artifact was deleted."
        fi
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update README with latest news report"
          git push
        fi 