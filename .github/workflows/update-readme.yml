name: Update README with Latest Report

on:
  workflow_run:
    workflows: ["Daily News Aggregation"]
    types: [completed]

permissions:
  contents: write
  actions: read

jobs:
  update-readme:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Get current date
      id: date
      run: echo "date=$(date -u +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      
    - name: Check if artifact exists
      id: check-artifact
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ARTIFACT_NAME="daily-news-report-${{ steps.date.outputs.date }}"
        echo "Looking for artifact: $ARTIFACT_NAME"
        ARTIFACTS=$(gh api repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}/artifacts --jq '.artifacts[].name')
        if echo "$ARTIFACTS" | grep -q "^$ARTIFACT_NAME$"; then
          echo "::set-output name=exists::true"
          echo "‚úÖ Found artifact: $ARTIFACT_NAME"
        else
          echo "::set-output name=exists::false"
          echo "‚ùå Artifact not found: $ARTIFACT_NAME"
          echo "Available artifacts:"
          echo "$ARTIFACTS" || echo "None"
        fi

    - name: Download latest artifact
      if: steps.check-artifact.outputs.exists == 'true'
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ARTIFACT_NAME="daily-news-report-${{ steps.date.outputs.date }}"
        echo "Downloading artifact: $ARTIFACT_NAME"
        gh run download --repo ${{ github.repository }} --name "$ARTIFACT_NAME" --dir ./artifacts
        if [ -f "./artifacts/news_report.txt" ]; then
          echo "‚úÖ Successfully downloaded artifact"
        else
          echo "‚ùå Artifact downloaded but news_report.txt not found"
          ls -la ./artifacts/ || echo "No artifacts directory"
        fi
        
    - name: Update README with latest report
      if: steps.check-artifact.outputs.exists == 'true'
      run: |
        if [ -f "./artifacts/news_report.txt" ]; then
          echo "‚úÖ Found news report artifact, updating README..."
          # Read the report content
          REPORT_CONTENT=$(cat "./artifacts/news_report.txt")
          
          # Use the full report content
          PREVIEW="$REPORT_CONTENT"
          
          # Create the new section content using printf to avoid heredoc issues
          printf "## üì∞ Latest Report\n\n" > new_section.md
          printf "**Latest Daily Report:** [View Latest Run](https://github.com/%s/actions)\n\n" "${{ github.repository }}" >> new_section.md
          printf "**Last Updated:** %s\n\n" "$(date -u +'%Y-%m-%d %H:%M UTC')" >> new_section.md
          printf "*Generated daily at 6:05 AM EST*\n\n" >> new_section.md
          printf "### üìã Report Preview\n" >> new_section.md
          printf "\`\`\`\n" >> new_section.md
          printf "%s\n" "$PREVIEW" >> new_section.md
          printf "\`\`\`\n\n" >> new_section.md
          printf "### üì• Download\n" >> new_section.md
          printf "1. Click the badge above ‚Üí Actions tab\n" >> new_section.md
          printf "2. Select latest \"Daily News Aggregation\" run\n" >> new_section.md
          printf "3. Download \`daily-news-report-%s\` artifact\n" "${{ steps.date.outputs.date }}" >> new_section.md
          awk awk '
          /## üì∞ Latest Report/ {
            system("cat new_section.md")
            p=1
            next
          }
          /^## / && p==1 {
            p=0
            print
            next
          }
          !p {
            print
          }
          ' README.md > README_new.md
          mv README_new.md README.md
          rm new_section.md
          echo "‚úÖ README updated successfully"
        else
          echo "‚ùå No news report artifact found. Skipping README update."
          echo "This might happen if the daily news aggregation failed or artifact was deleted."
        fi
        
    - name: Commit and push changes
      run: |
        git config --local user.email "git@knock.email"
        git config --local user.name "GitHub Action"
        git add README.md
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update README with latest news report"
          git push
        fi 
